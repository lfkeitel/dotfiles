#!/bin/bash

PROJECT_NAME="$1"
GIT_URL="$2"

FINDCMD='find'
GREPCMD='grep'
if [[ $(uname) == 'Darwin' ]]; then
    FINDCMD='gfind'
    GREPCMD='ggrep'
fi

CODE_DIR="${CODE_DIR:-$HOME/code}"

if [[ -z $PROJECT_NAME ]]; then
    echo "What should I name the project?"
    exit 1
fi

if [[ -z $GIT_URL ]]; then
    # Check if a git URL was given and get the project name from that
    if [[ $PROJECT_NAME =~ \.git$ ]]; then
        GIT_URL=$PROJECT_NAME
        PROJECT_NAME="$(echo "$PROJECT_NAME" | rev | cut -d'/' -f1 | rev | cut -d'.' -f1)"

        echo "Using $PROJECT_NAME as project name"
    fi
fi

find_next_code() {
    local CODE
    CODE=$($FINDCMD $CODE_DIR -maxdepth 1 -type d -printf "%f\n" | $GREPCMD -P '\d{3}\-' | sort | tail -n1 | cut -d'-' -f1 | sed -e 's/^0*//')
    format_project_code $(($CODE + 1))
}

format_project_code() {
    if [[ $1 -lt 10 ]]; then
        echo "00$1"
    elif [[ $1 -lt 100 ]]; then
        echo "0$1"
    else
        echo $1
    fi
}

NEXT_CODE=$(find_next_code)
NEW_DIR="$CODE_DIR/$NEXT_CODE-$PROJECT_NAME"

if [[ -n $GIT_URL ]]; then
    git clone "$GIT_URL" "$NEW_DIR"
else
    mkdir "$NEW_DIR"
    cd "$NEW_DIR"
    git init
    echo 'private/' > .gitignore
    echo 'bin/' >> .gitignore
    echo '.vscode/' >> .gitignore
    echo 'vendor/' >> .gitignore
    echo 'node_modules/' >> .gitignore
    mkdir private
    mkdir bin
fi

echo
echo "Project Code: $NEXT_CODE"
echo "Make sure to run gen_project_aliases to get new aliases"
