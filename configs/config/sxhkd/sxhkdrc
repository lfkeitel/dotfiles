#
# wm independent hotkeys
#

# terminal emulator
super + alt + {_,shift +} + Return
	$TERMINAL -c st {-e tmux -2 -u,_}

super + {_,shift +} + Return
	bspc desktop -f "$BSPWM_WINDOW_2";\
	$TERMINAL -c st-terminal {-e tmux -2 -u,_}

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

super + shift + BackSpace
	prompt "Are you sure you want to reboot?" "systemctl reboot"

super + b
	firefox

# program launcher
super + d
	rofi -show combi -combi-modi "run#drun#window#ssh" -modi combi#window

super + shift + e
	thunar

super + l
	toggle_xautolock

super + m
	mattermost-desktop

super + {n,p,shift + p,s}
	lmx {next,toggle,prev,stop}

super + t
	thunderbird

super + x
	lock_screen

super + shift + x
	prompt "Are you sure you want to shutdown?" "systemctl poweroff"

# Media controls
XF86AudioRaiseVolume
	lmc up 5
XF86AudioLowerVolume
	lmc down 5
XF86AudioMute
	lmc mute

XF86AudioNext
	lmc next
XF86AudioPlay
	lmc toggle
XF86AudioPrev
	lmc prev
XF86AudioStop
	lmc toggle

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# toggle scratchpad
super + g
	id=$(cat /tmp/scratchid);\
	[ -n "$id" ] && bspc node $id --flag hidden; bspc node -f $id

# restart scratchpad terminal
super + shift + g
	st -c scratchpad -e $HOME/.scripts/bspwm-scratchpad

#
# state/flags
#

# set the window state
super + {shift + w,alt + shift + w,f,shift + f}
	bspc node -t {tiled,pseudo_tiled,fullscreen,floating}

# set the node flags
#super + ctrl + {m,x,y,z}
#	bspc node -g {marked,locked,sticky,private}

super + {w,e}
	bspc desktop --layout {monocle,tiled}

super + v
	bspc desktop --layout next

#
# focus/swap
#

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} "$BSPWM_WINDOW_{1-9,10}"

# focus or send to the given desktop (keypad)
super + KP_{1-9,0}
	bspc desktop -f "$BSPWM_WINDOW_{1-9,10}"

# focus or swap nodes on same desktop
super + {_, shift + }{Left,Right,Up,Down}
	bspc node -{f,s} {prev,next,north,south}.local

# move node to monitor
super + shift + alt + {Left,Right}
	bspc node -m {west,east} --follow

# move desktop to monitor
super + shift + alt + ctrl + {Left,Right}
	bspc desktop -m {west,east} --follow

# focus monitor
super + alt + {Left,Right}
	bspc monitor -f {west,east}

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + alt + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

super + {_,shift +} z
	bspc config -d focused window_gap {0,10}

super + c
	n=$(bspc query -N -n); \
	bspc node @focused:/ -C forward -R 90; \
	bspc node $n -f
