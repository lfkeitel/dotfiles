NOTES_DIR="${NOTES_DIR:-$HOME/.notes}"

_make_notes_dir() {
    if [[ ! -d $NOTES_DIR ]]; then
        mkdir -p "$NOTES_DIR"
    fi
}

n() {
    _make_notes_dir
    $EDITOR "$NOTES_DIR/$*".note
}

nls() {
    _make_notes_dir

    echo "Notes:"
    ls -c "$NOTES_DIR" | grep "$*" | awk '{print "- "$1}'
}

_n_complete() {
    ENTRIES="$(ls -c "$NOTES_DIR" | grep "$PREFIX")" # grep directory list for matches
    while IFS= read -r ENTRY; do
        compadd "$(echo $ENTRY | rev | cut -f 2- -d '.' | rev)" # strip extension and add to completion
    done <<< "$ENTRIES"
}
compdef _n_complete n

alias notes='n'
alias lsnotes='nls'

maclookup() {
    # I don't call curl by itself because a normal response will not return a newline
    # but a failed response will. This removes any trailing whitespace and ensures
    # there's always a new line.
    echo $(curl -s "https://api.macvendors.com/$1")
}

sudossh() {
    ssh -t $1 sudo su
}

sys-upgrade() {
    linux_distro="$(gawk -F= '/^NAME/{print $2}' /etc/os-release 2>/dev/null | tr -d '"')"
    if [[ $linux_distro == "Ubuntu" ]]; then
        sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
    elif [[ $linux_distro == "Fedora" ]]; then
        sudo dnf upgrade -y
    fi
}

gogithub() {
    local repo="git@github.com:${1}.git"
    local repo_path="$GOPATH/src/github.com/${1}"
    local current_dir="$(pwd)"
    repo_path="$(dirname $repo_path)"
    mkdir -p $repo_path
    cd $repo_path
    git clone $repo
    cd $current_dir
}
